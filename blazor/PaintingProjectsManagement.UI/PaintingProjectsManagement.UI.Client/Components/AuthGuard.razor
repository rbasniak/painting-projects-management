@using PaintingProjectsManagement.UI.Client.Services
@inject IAuthenticationService AuthService
@inject NavigationManager Navigation

@if (!hasCheckedAuth)
{
    <MudProgressCircular Indeterminate="true" Color="Color.Primary" Class="mt-8" />
}
else if (isAuthenticated)
{
    @ChildContent
}
else
{
    <MudContainer MaxWidth="MaxWidth.Small" Class="mt-16">
        <MudCard>
            <MudCardHeader>
                <MudText Typo="Typo.h5" Class="text-center">Authentication Required</MudText>
            </MudCardHeader>
            <MudCardContent>
                <MudText Typo="Typo.body1" Class="text-center mb-4">
                    You need to be logged in to access this page.
                </MudText>
                <MudButton Variant="Variant.Filled"
                           Color="Color.Primary"
                           FullWidth="true"
                           OnClick="@(() => Navigation.NavigateTo("/login"))">
                    Go to Login
                </MudButton>
            </MudCardContent>
        </MudCard>
    </MudContainer>
}

@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    private bool isAuthenticated = false;
    private bool hasCheckedAuth = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !hasCheckedAuth)
        {
            try
            {
                isAuthenticated = await AuthService.IsAuthenticatedAsync();
            }
            catch
            {
                isAuthenticated = false;
            }

            hasCheckedAuth = true;
            StateHasChanged(); // Force re-render after auth check
        }
    }
}
